# Runs as ansible-playbook -vvvv -i 'localhost,' ansible-vpc.yml
# this one is for the non-prod aws account and must be run from an outside instance
---
- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    sg: SG_ANS
    host_name: ANS-TOOLS-1
  tasks:
    - name: launch ansible cloudformation example
      cloudformation:
        stack_name: "TOOLS"
        state: "present"
        region: "us-east-1"
        disable_rollback: false
        template: "roles/cloudformation/files/TOOLS_VPC.template"
        tags:
          Name: "TOOLS"
      register: stack

    - name: show stack outputs
      debug:
        var: stack.stack_outputs

#    - name: Ansible non-prod security group
#      ec2_group:
#        name: "{{ sg }}"
#        description: Anisble non-prod security group
#        vpc_id: "{{ stack.stack_outputs.VPCID }}"
#        region: "{{ region }}"
#        state: present
#        purge_rules: true
#        purge_rules_egress: true
#        rules:
#          - proto: tcp
#            from_port: 22
#            to_port: 22
#            cidr_ip: 0.0.0.0/0
#      register: aws_sg
#    - name: Tag the SG_ANS_NONPROD
#      ec2_tag:
#        resource: "{{aws_sg.group_id}}"
#        region: "{{ region }}"
#        state: present
#        tags:
#          Name: "{{ sg }}"
#  
#    - name: Create the Ansible NONPROD Instance
#      ec2:
#        key_name: dev-ops-config
#        instance_type: c4.2xlarge
#        image: "{{ ans_centos }}"
#        group: "{{ sg }}"
#        vpc_subnet_id: "{{ stack.stack_outputs.PublicSubnet1 }}"
#        assign_public_ip: yes
#        zone: "{{ stack.stack_outputs.AvailabilityZone1 }}"
#        region: "{{ region }}"
#        volumes:
#          - device_name: /dev/xvdb
#            volume_size: 20
#            delete_on_termination: true
#        instance_tags:
#          Name: "{{ host_name }}"
#        wait: yes
#      register: ec2
#  
#    - name: register dns
#      route53:
#        command: create
#        overwrite: true
#        zone: singledowncasino.com
#        record: ansvpc01.singledowncasino.com
#        type: A
#        ttl: 60
#        value: "{{ item.public_ip }}"
#      with_items: "{{ ec2.instances }}"
#  
#    - name: add new instance to host group
#      add_host: hostname={{ item.public_ip }} groupname=anslaunch
#      with_items: "{{ ec2.instances }}"
#
#    - name: show vpcid
#      debug:
#        var: vpc_id
#
#    - name: Wait for SSH to be available
#      wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=300 state=started
#      with_items: "{{ec2.instances}}"
#
#- name: Configure provisioned servers
#  hosts: anslaunch
#  remote_user: centos
#  become: yes
#  become_user: root
#  become_method: sudo
#  roles:
#    - ansible_server_a
#
#- name: Configure provisioned servers
#  hosts: anslaunch
#  remote_user: root
#  become: yes
#  become_user: root
#  become_method: sudo
#  vars:
#    host_name: ANS-NONPROD-1
#  roles:
#    - { role: ansible_server_b, vpc_id: PUT_YOUR_VPCIDS_HERE }

