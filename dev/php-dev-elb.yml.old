# export ANSIBLE_FORCE_COLOR=true; export AWS_PROFILE=prod; ansible-playbook -vvvv --vault-password-file ~/.vault_pass.txt ~/ddi-vpc/dev/php-dev-elb.yml
---
- name: ELB for PHP backed services
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/dev
    - ../host_vars/php
  vars:
    name_tag: PHP-DEV
    zone: dev.doubledowncasino.com
    elb_sg: SG_LBPHP_DEV
    elb_fqdn: dealer.dev.doubledowncasino.com
  tasks:
    - name: Create "{{ elb_sg }}" security group
      include: ../sec_groups/{{ elb_sg }}_INC.yml

    - name: Launch ELB
      ec2_elb_lb:
        name: "{{ name_tag }}"
        state: present
        security_group_ids: "{{ ec2_group.group_id }}"
        region: "{{ region }}"
        connection_draining_timeout: "{{ ec2_elb_lb.connection_draining_timeout }}"
        cross_az_load_balancing: true
        subnets:
          - "{{ subnet_pub_1 }}"
          - "{{ subnet_pub_2 }}"
        listeners:
          - protocol: "{{ ec2_elb_lb.listeners.protocol }}"
            load_balancer_port: "{{ ec2_elb_lb.listeners.load_balancer_port }}"
            instance_port: "{{ instance_port }}"
        health_check:
          ping_protocol: "{{ ec2_elb_lb.health_check.ping_protocol }}"
          ping_port: "{{ instance_port }}"
          ping_path: "{{ ec2_elb_lb.health_check.ping_path }}"
          response_timeout: "{{ ec2_elb_lb.health_check.response_timeout }}"
          interval: "{{ ec2_elb_lb.health_check.interval }}"
          unhealthy_threshold: "{{ ec2_elb_lb.health_check.unhealthy_threshold }}"
          healthy_threshold: "{{ ec2_elb_lb.health_check.healthy_threshold }}"
        tags:
          Name: "{{ name_tag }}"
          service: "{{ service_tag }}"
      register: ec2_elb_lb

    - name: Gather ELB facts
      action:
        module: ec2_elb_facts
        region: "{{ region }}"
        names: "{{ name_tag }}"
      register: elb_facts
      ignore_errors: yes

    - name: Debug ELB facts/object
      action:
        module: debug
        msg: "{{ ec2_elb_lb }}"

    - name: Register primary dns
      route53:
        command: create
        overwrite: true
        zone: "{{ zone }}"
        record: "{{ elb_fqdn }}"
        type: A
        value: "{{ elb_facts.elbs.0.hosted_zone_name }}"
        alias: True
        alias_hosted_zone_id: "{{ elb_facts.elbs.0.hosted_zone_id }}"
      tags:
        - route53
