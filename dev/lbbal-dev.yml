# ansible-playbook -vvvv lbbal-dev.yml
# STILL NEED MODIFY THE DNS BY HAND IF STARTING MORE THAN 1 HAPROXY INSTANCE

- name: new haproxy bal
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/dev
    - ../host_vars/bal-dev
  tasks:
    - name: launch instances in az1
      ec2:
        key_name: "{{ key_name }}"
        instance_type: "{{ lb_instance_type }}"
        image: "{{ lb_ami }}"
        group: "{{ elb_sg }}"
        vpc_subnet_id: "{{ subnet_pri_1 }}"
        assign_public_ip: yes
        zone: "{{ az1 }}"
        region: "{{ region }}"
        instance_profile_name: "{{ lb_role }}"
        instance_tags:
          Name: "{{ ha_lb_name_tag }}-{{ item }}-{{ deployment }}"
          app: "{{ app_tag }}"
          env: "{{ env }}"
        user_data: |
                   #cloud-config
                   hostname: "{{ lb_fqdn }}"
                   runcmd:
                     - sed -i 's/ldap-tools.ddc.io/ldap00.use1.{{ env }}.ddc.io/' /etc/ssh/ldap-keys.sh
                     - sed -i 's|^ldap_uri =.*$|ldap_uri = ldap://ldap00.use1.{{ env }}.ddc.io|' /etc/sssd/sssd.conf
                     - /root/bin/haproxy_config.py --updaterepo --force
      with_sequence: start=1 stride=2 end=1
      register: ec2out1

    - name: launch instances in az2
      ec2:
        key_name: "{{ key_name }}"
        instance_type: "{{ lb_instance_type }}"
        image: "{{ lb_ami }}"
        group: "{{ elb_sg }}"
        vpc_subnet_id: "{{ subnet_pri_2 }}"
        assign_public_ip: no
        zone: "{{ az2 }}"
        region: "{{ region }}"
        instance_profile_name: "{{ lb_role }}"
        instance_tags:
          Name: "{{ ha_lb_name_tag }}-{{ item }}-{{ deployment }}"
          app: "{{ app_tag }}"
          env: "{{ env }}"
        user_data: |
                   #cloud-config
                   hostname: "{{ lb_fqdn }}"
                   runcmd:
                     - sed -i 's/ldap-tools.ddc.io/ldap00.use1.{{ env }}.ddc.io/' /etc/ssh/ldap-keys.sh
                     - sed -i 's|^ldap_uri =.*$|ldap_uri = ldap://ldap00.use1.{{ env }}.ddc.io|' /etc/sssd/sssd.conf
                     - /root/bin/haproxy_config.py --updaterepo --force
      with_sequence: start=2 stride=2 end=2
      register: ec2out2

    - name: when ssh comes up, state should be running
      wait_for: host={{ ec2.instances.0.private_ip }} port=22 delay=60 timeout=420 state=started

    - name: when SSH comes up state should be running
      wait_for: host={{ item.instances[0].private_ip }} port=22 delay=60 timeout=300 state=started
      with_items:
        - "{{ ec2out1.results }}"
#        - "{{ ec2out2.results }}"




#    - name: register dns
#      route53:
#        command: create
#        overwrite: true
#        zone: ddc.io
#        record: "{{ fqdn }}"
#        type: CNAME
#        ttl: 60
#        value: "{{ ec2.instances.0.private_ip }}"
