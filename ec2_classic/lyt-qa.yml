# ansible-playbook -vvvv -i "localhost," --ask-vault-pass foo.yml

- name: loyalty service
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/qa
    - ../host_vars/lyt
  vars:
    name_tag: LYT-QA
    fqdn: lytddc01.use1.qa.doubledowncasino.com
    sg: QA
    role: lyt-qa
    env: qa
  tasks:
    - name: launch instance
      ec2:
        key_name: ops-config
        instance_type: m3.large
        image: "{{ app_ami }}"
        group: "{{ sg }}"
        region: us-east-1
        instance_profile_name: "{{ role }}"
        instance_tags:
          Name: "{{ name_tag }}"
          app: "{{ app_tag }}"
          env: "{{ env }}"
        wait: yes
      register: ec2
    - name: add new instance to host group
      add_host: hostname={{ item }} groupname=launched
      with_items:
        - "{{ ec2.instances.0.public_dns_name }}"
    - name: wait for SSH to come up
      wait_for: host={{ ec2.instances.0.public_dns_name }} port=22 delay=60 timeout=420 state=started
    - name: add classiclink
      shell: "aws ec2 attach-classic-link-vpc --instance-id {{ item }} --vpc-id {{ vpc_id }} --groups {{ classiclink_sg }}"
      with_items:
        - "{{ ec2.instances.0.id }}"
    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: doubledowncasino.com
        record: "{{ fqdn }}"
        type: CNAME
        ttl: 60
        value: "{{ ec2.instances.0.public_dns_name }}"

- name: Configure instance(s)
  hosts: launched
  user: root
  gather_facts: True
  vars:
    sshd_additional_groups: 'dev qa'
    sudoers_user:
      - username: arosenberg
        disable_requiretty: false
        cmd_list:
          - '(root) NOPASSWD: ALL'
      # deployer tool does not do ssh -T, and needs !requiretty
      - username: autobldr
        disable_requiretty: true
        cmd_list:
          - '(root) NOPASSWD: /usr/bin/yum, /bin/rpm, /sbin/service'
      - username: qaansible
        disable_requiretty: true
        cmd_list:
          - '(root) NOPASSWD: ALL'
  roles:
    - sudoers_user
  tasks:
    - name: sshd_config AllowGroups
      lineinfile:
        dest=/etc/ssh/sshd_config
        regexp='^AllowGroups (.*)$'
        line="AllowGroups root ldap_all {{ sshd_additional_groups }}"
        backrefs=yes
      register: sshdconfig
    - service: name=sshd state=reloaded
      when: sshdconfig.changed

- name: register with elb
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    lb: LYT-QA
  tasks:
    - name: last step, ignore the error, it actually succeeded
      ec2_elb:
        ec2_elbs: "{{ lb }}"
        instance_id: "{{ item }}"
        region: us-east-1
        state: present
      with_items:
        - "{{ ec2.instances.0.id }}"
      ignore_errors: true
