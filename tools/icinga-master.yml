# ansible-playbook -vvvv -i "localhost," --vault-password-file ~/.vaultpass foo.yml

- name: icinga-master
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/tools
    - ../host_vars/icinga
  vars:
    name_tag: 'ICINGA-MASTER 01'
    fqdn: icinga-master01.ddc.io
    sg: SG_ICINGA_TOOLS
#    lb: ICINGA-TOOLS
    role: ddc-nagios-prod
    env: tools

  tasks:
    - include: sec_groups/{{ sg }}_INC.yml
    - name: launch instance
      ec2:
        key_name: ops-config
        instance_type: "{{ instance_type }}"
        image: "{{ centos_7_ebs_hvm }}"
        group: "{{ sg }}"
        vpc_subnet_id: "{{ subnet_pri_2 }}"
        assign_public_ip: false
        zone: "{{ az2 }}"
        region: "{{ region }}"
        instance_profile_name: "{{ role }}"
        instance_tags:
          Name: "{{ name_tag }}"
          env: "{{ env }}"
          app: "TOOLS"
          service: "OPS"
        user_data: |
                   #cloud-config
                   hostname: "{{ fqdn }}"
        wait: yes
      register: ec2
    - name: Add instances to host group
      local_action: add_host hostname={{ ec2.instances.0.private_ip }} instanceid={{ ec2.instances.0.id }} groupname=launched
    - name: wait for SSH to come up
      wait_for: host={{ ec2.instances.0.private_ip }} port=22 delay=60 timeout=420 state=started
    - name: allow cloud-init to execute
      pause: seconds=15
    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: ddc.io
        record: "{{ fqdn }}"
        type: A
        ttl: 300
        value: "{{ ec2.instances.0.private_ip }}"


- name: configure instance
  hosts: launched
  remote_user: centos
  become: yes
  become_user: root
  become_method: sudo
  vars:
    name_tag: 'ICINGA-MASTER 01'
    fqdn: icinga-master01.ddc.io
    mountpoint: '/mnt/icinga-mount'
    # use local mysql instead of rds
    #db_host: 'localhost'
    db_host: db-ops-general-cluster.cluster-cmgtqqi0jns8.us-east-1.rds.amazonaws.com
    agent: false
    master: true
    local_zone: 'master'
    blkdev: 'xvdb'
    fstype: xfs
  vars_files:
    - ../group_vars/tools
    - ../host_vars/icinga
  roles:
    - { role: updates }
    - {
        role: icinga, icinga_db_host: "{{ db_host }}", director_db_host: "{{ db_host }}",
        icinga_master_fqdn: "{{ fqdn }}", icinga-mount: "{{ mountpoint }}"
      }

