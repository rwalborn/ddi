# ansible-playbook -vvvv -i "localhost," --ask-vault-pass foo.yml

# change the vars in order to build 01 or 02

- name: email service
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/qa
    - ../host_vars/ems
  vars:
    fqdn: emsddc01.use1.qa.doubledowncasino.com
    name_tag: EMS-QA
    sg: SG_EMS_QA
    role: ems-qa
    env: qa
  tasks:
    # 10.152.16.115/32 is qa jenkins
    - name: create security group
      ec2_group:
        name: "{{ sg }}"
        description: "{{ sg }}"
        vpc_id: "{{ vpc_id }}"
        region: us-east-1
        rules:
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: "{{ vpc_cidr }}"
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 192.168.0.0/22
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 10.152.16.115/32
          - proto: tcp
            from_port: 6300
            to_port: 6300
            cidr_ip: 10.152.16.115/32
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 10.152.16.115/32
          - proto: tcp
            from_port: 9555
            to_port: 9555
            cidr_ip: 10.152.16.115/32
    - name: launch instance
      ec2:
        key_name: ops-config
        instance_type: m3.medium
        image: "{{ app_ami }}"
        group: "{{ sg }}"
        vpc_subnet_id: "{{ subnet_pri_1c }}"
        assign_public_ip: no
        zone: us-east-1c
        region: us-east-1
        instance_profile_name: "{{ role }}"
        instance_tags:
          Name: "{{ name_tag }}"
          app: "{{ app_tag }}"
          env: "{{ env }}"
          service: "{{ service_tag }}"
          rpm: "{{ rpm_tag }}"
      register: ec2
    - name: add new instance to host group
      add_host: hostname={{ ec2.instances.0.private_ip }} groupname=launched
    - name: wait for SSH to come up
      wait_for: host={{ ec2.instances.0.private_ip }} port=22 delay=60 timeout=300 state=started
    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: doubledowncasino.com
        record: "{{ fqdn }}"
        type: A
        ttl: 60
        value: "{{ ec2.instances.0.private_ip }}"

- name: Configure instance(s)
  hosts: launched
  user: root
  sudo: True
  gather_facts: True
  vars:
    sudoers_user:
      - username: arosenberg
        disable_requiretty: false
        cmd_list:
          - '(ddiuser) NOPASSWD: ALL'
          - '(root) NOPASSWD: /sbin/service, /bin/netstat, /usr/sbin/tcpdump, /usr/bin/yum'
      - username: jhahn
        disable_requiretty: false
        cmd_list:
          - '(ddiuser) NOPASSWD: ALL'
          - '(root) NOPASSWD: /sbin/service, /bin/netstat, /usr/sbin/tcpdump, /usr/bin/yum'
      - username: fmartincic
        disable_requiretty: false
        cmd_list:
          - '(ddiuser) NOPASSWD: ALL'
          - '(root) NOPASSWD: /sbin/service, /bin/netstat, /usr/sbin/tcpdump, /usr/bin/yum'
      # IFPRJ-358 for code coverage
      - username: qaansible
        disable_requiretty: true
        cmd_list:
          - '(root) NOPASSWD: ALL'
  roles:
    - ddiuser
    - { role: ldap, sshd_additional_groups: 'dev qa' }
    - ops
    - splunkforwarder
    - datadog
    - sudoers_user
    - auth_autobldr
  tasks:
    - yum: name=java-1.8.0-openjdk

- name: register with elb
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    lb: EMS-QA
  tasks:
    - name: last step, ignore the error, it actually succeeded
      ec2_elb:
        ec2_elbs: "{{ lb }}"
        instance_id: "{{ item }}"
        region: us-east-1
        state: present
      with_items:
        - "{{ ec2.instances.0.id }}"
