# Rule Numbering
# 1-99: deny (first-match, first denied)
# 100-199: same vpc
# 200-299: internet
# 300-399: other VPCs
# 400-499: classiclink
# for ingress rules, CidrBlock is src ip and Port Range is dst port
# for egress rules, CidrBlock is dst ip and Port Range is dst port

AWSTemplateFormatVersion: '2010-09-09'
Description: vpc-pub
Parameters:
  subnettype:
    Description: 'subnet type that this NACL will be used with'
    Type: String
    Default: trusted-pub
  naclversion:
    Description: 'Version number of the NACL'
    Type: String
    Default: '009'
  vpcname:
    Description: 'My VPC Name'
    Type: String
    Default: CC9
  vpcid:
    Description: 'My VPC ID'
    Type: String
    Default: vpc-12345678
  vpccidr:
    Description: 'My VPC CIDR'
    Type: String
    Default: 172.16.0.0/16
  pipelinecidr:
    Description: 'All possible Pipeline VPC CIDRs'
    Type: String
    Default: 172.16.0.0/12
  toolscidr:
    Description: 'Tools VPC CIDR'
    Type: String
    Default: 192.168.0.0/21
  trustedcidr:
    Description: 'Tools VPC trusted CIDR'
    Type: String
    Default: 192.168.0.0/22
  sewagecidr:
    Description: 'Tools VPC sewage CIDR'
    Type: String
    Default: 192.168.4.0/22
  seavpn1:
    Description: 'Seattle Meraki LAN 1'
    Type: String
    Default: 65.117.84.83/32
  seavpn2:
    Description: 'Seattle Meraki LAN 2'
    Type: String
    Default: 50.226.229.178/32
  service:
    Description: 'service tag'
    Type: String
    Default: nacl
  app:
    Description: 'app tag'
    Type: String
    Default: TOOLS
  env:
    Description: 'env tag'
    Type: String
    Default: development
  commit:
    Description: 'git commit of this version'
    Type: String
    Default: somehash
Resources:
  myNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: vpcid
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: vpcname
            - Ref: subnettype
            - Ref: naclversion
      - Key: prefix
        Value:
          Fn::Join:
          - '-'
          - - Ref: vpcname
            - Ref: subnettype
      - Key: version
        Value:
          Ref: naclversion
      - Key: service
        Value:
          Ref: service
      - Key: app
        Value:
          Ref: app
      - Key: env
        Value:
          Ref: env
      - Key: commit
        Value:
          Ref: commit
  in100:
    # traffic inside same VPC
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock:
        Ref: vpccidr
  in150:
    # NTP response from sewage-pub
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 150
      Protocol: 17
      RuleAction: allow
      CidrBlock:
        Ref: sewagecidr
      PortRange:
        From: 1024
        To: 65535
  in210:
    # allow internet to http
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 210
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  in220:
    # allow internet to https
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 220
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443
  in290:
    # allow inbound response to requests originating in the subnet
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 290
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  in299:
    # allow icmp response from internet
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 299
      Protocol: 1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: -1
        Type: -1
  in300:
    # allow all from trusted
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 300
      Protocol: -1
      RuleAction: allow
      CidrBlock:
        Ref: trustedcidr
  in400:
    # allow all from classiclink
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 400
      Protocol: -1
      RuleAction: allow
      CidrBlock: 10.0.0.0/8
  out100:
    # traffic inside same VPC
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock:
        Ref: vpccidr
  out200:
    # allow to internet:22 such as bitbucket
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 200
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22
  out210:
    # allow to internet:80
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 210
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  out220:
    # allow to internet:443
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 220
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443
  out290:
    # response to internet ephemeral ports
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 290
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  out299:
    # allow icmp to internet
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 299
      Protocol: 1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: -1
        Type: -1
  out300:
    # allow to Tools VPC:all
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 300
      Protocol: -1
      RuleAction: allow
      CidrBlock:
        Ref: toolscidr
  out310:
    # allow to partner VPCs:all
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 310
      Protocol: -1
      RuleAction: allow
      CidrBlock:
        Ref: pipelinecidr
