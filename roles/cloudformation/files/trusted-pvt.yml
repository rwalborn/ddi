# Rule Numbering
# 1-99: deny (first-match, first denied)
# 100-199: same vpc
# 200-299: internet
# 300-399: other VPCs
# 400-499: classiclink
# for ingress rules, CidrBlock is src ip and Port Range is dst port
# for egress rules, CidrBlock is dst ip and Port Range is dst port

AWSTemplateFormatVersion: '2010-09-09'
Description: trusted-pvt
Parameters:
  subnettype:
    Description: 'subnet type that this NACL will be used with'
    Type: String
    Default: trusted-pvt
  naclversion:
    Description: 'Version number of the NACL'
    Type: String
    Default: '009'
  vpcname:
    Description: 'My VPC Name'
    Type: String
    Default: CC9
  vpcid:
    Description: 'My VPC ID'
    Type: String
    Default: vpc-12345678
  vpccidr:
    Description: 'My VPC CIDR'
    Type: String
    Default: 172.16.0.0/16
  pipelinecidr:
    Description: 'All possible Pipeline VPC CIDRs'
    Type: String
    Default: 172.16.0.0/12
  toolscidr:
    Description: 'Tools VPC CIDR'
    Type: String
    Default: 192.168.0.0/21
  trustedcidr:
    Description: 'Tools VPC trusted CIDR'
    Type: String
    Default: 192.168.0.0/22
  sewagecidr:
    Description: 'Tools VPC sewage CIDR'
    Type: String
    Default: 192.168.4.0/22
  seavpn1:
    Description: 'Seattle Meraki LAN 1'
    Type: String
    Default: 65.117.84.83/32
  seavpn2:
    Description: 'Seattle Meraki LAN 2'
    Type: String
    Default: 50.226.229.178/32
  service:
    Description: 'service tag'
    Type: String
    Default: nacl
  app:
    Description: 'app tag'
    Type: String
    Default: TOOLS
  env:
    Description: 'env tag'
    Type: String
    Default: development
  commit:
    Description: 'git commit of this version'
    Type: String
    Default: somehash
Resources:
  myNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: vpcid
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: vpcname
            - Ref: subnettype
            - Ref: naclversion
      - Key: prefix
        Value:
          Fn::Join:
          - '-'
          - - Ref: vpcname
            - Ref: subnettype
      - Key: version
        Value:
          Ref: naclversion
      - Key: service
        Value:
          Ref: service
      - Key: app
        Value:
          Ref: app
      - Key: env
        Value:
          Ref: env
      - Key: commit
        Value:
          Ref: commit
  in100:
    # traffic inside the same /22
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock:
        Ref: trustedcidr
  in110:
    # spacewalk agent and proxy to spacewalk master in trusted-pvt
    # 0.0.0.0/0 to cover 192.168.0.0/21 and 172.16.0.0/12
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 110
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  in120:
    # spacewalk agent and proxy to spacewalk master in trusted-pvt
    # 0.0.0.0/0 to cover 192.168.0.0/21 and 172.16.0.0/12
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443
  in140:
    # LDAP request from sewage
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 140
      Protocol: 6
      RuleAction: allow
      CidrBlock:
        Ref: sewagecidr
      PortRange:
        From: 389
        To: 389
  in150:
    # NTP response from sewage-pub
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 150
      Protocol: 17
      RuleAction: allow
      CidrBlock:
        Ref: sewagecidr
      PortRange:
        From: 1024
        To: 65535
  in290:
    # allow inbound response to requests originating in the subnet
    # also covers ldap master to slaves in pipeline VPC
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 290
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  in299:
    # allow icmp response from internet
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 299
      Protocol: 1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: -1
        Type: -1
  in340:
    # LDAP request from pipeline VPC
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: false
      RuleNumber: 340
      Protocol: 6
      RuleAction: allow
      CidrBlock:
        Ref: pipelinecidr
      PortRange:
        From: 389
        To: 389
  out100:
    # traffic inside same VPC
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock:
        Ref: toolscidr
  out290:
    # connect to low ports on internet: 22, 25, 80, 88, 389, 443
    # response to ephemeral ports from internet: 1024-65535
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 290
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1
        To: 65535
  out299:
    # allow icmp to internet
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 299
      Protocol: 1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Icmp:
        Code: -1
        Type: -1
  out300:
    # allow to pipeline VPCs:all
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: myNetworkAcl
      Egress: true
      RuleNumber: 300
      Protocol: -1
      RuleAction: allow
      CidrBlock:
        Ref: pipelinecidr