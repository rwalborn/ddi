---
- name: create elb
  ec2_elb_lb:
    name: "{{ name_tag }}"
    state: present
    security_group_ids: sg-947649e8
    region: us-east-1
    connection_draining_timeout: 30
    cross_az_load_balancing: true
    subnets:
       - "{{ subnet_pub_1 }}"
       - "{{ subnet_pub_2 }}"
    listeners:
       - protocol: http
         instance_protocol: http
         load_balancer_port: 80
         instance_port: 8095
       - protocol: https
         instance_protocol: http
         load_balancer_port: 443
         instance_port: 8095
         ssl_certificate_id: "{{ ssl_cert_arn }}"
    health_check:
       ping_protocol: http
       ping_port: 8095
       ping_path: /
       response_timeout: 5
       interval: 10
       unhealthy_threshold: 2
       healthy_threshold: 2
    stickiness:
       type: application
       enabled: yes
       cookie: JSESSIONID
  register: ec2_elb_lb

- name: Launch instance
  ec2:
    region: "{{ region }}"
    key_name: ops-config
    group: "{{ sg }}"
    instance_type: c3.2xlarge
    instance_profile_name: OPS
    image: "{{ centos_7_ebs_hvm }}"
    vpc_subnet_id: "{{ subnet_pri_1 }}"
    zone: "{{ az1 }}"
    instance_tags:
      Name: "{{ name_tag }}"
      icinga-profile: Crowd-Paged
      application: Atlassian
      env: tools
      service: OPS
    wait: yes
  register: ec2

- name: set fact instance_id
  set_fact: instance_id="{{ ec2.instances.0.id }}"

- name: create EBS Volume
  include: ../roles/crowd/tasks/volume.yml
  when: ec2 is defined

- name: register dns
  route53:
    command: create
    overwrite: true
    zone: doubledowninteractive.com
    record: "{{ domain }}"
    type: CNAME
    ttl: 60
    value: "{{ ec2_elb_lb.elb.dns_name }}"
  when: ec2_elb_lb is defined and not rebuild

- name: register mgmt dns
  route53:
    command: create
    overwrite: true
    zone: ddc.io
    record: "{{ mgt }}"
    type: CNAME
    ttl: 60
    value: "{{ ec2.instances.0.private_dns_name }}"
  when: ec2 is defined and not rebuild

- name: add new instance to host group
  local_action: add_host hostname={{ ec2.instances.0.private_ip }} groupname=launched
  when: ec2 is defined

- name: Wait for SSH to be available
  wait_for: host={{ ec2.instances.0.private_ip }} port=22 delay=60 timeout=300 state=started
  when: ec2 is defined