# ansible-playbook -vvvv -i "localhost," --ask-vault-pass foo.yml

# Make AMI for service

- name: email service
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/dev
  vars:
    # no app/env tags b/c we don't want service rpm in base ami
    name_tag: EMS-AMI
    service_tag: EMS
    sg: SG_LAN_DEV
    role: ami_base_centos
    instance_type: m3.medium
    key_name: ops-config
  tasks:
    - name: launch instance
      ec2:
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image: "{{ centos_7_ebs_hvm }}"
        group: "{{ sg }}"
        region: "{{ region }}"
        vpc_subnet_id: "{{ subnet_pri_1 }}"
        zone: "{{ az1 }}"
        instance_profile_name: "{{ role }}"
        instance_tags:
          Name: "{{ name_tag }}"
          service: "{{ service_tag }}"
        wait: yes
      register: ec2
    - name: add new instance to host group
      add_host: hostname={{ ec2.instances.0.private_ip }} groupname=launched
    - name: wait for SSH to come up
      wait_for: host={{ ec2.instances.0.private_ip }} port=22 delay=60 timeout=300 state=started
    - name: allow cloud-init to execute
      pause: seconds=30

- name: Configure instance(s)
  hosts: launched
  remote_user: centos
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: True
  vars_files:
    - ../group_vars/dev
  roles:
    - ddiuser
    - { role: ldap_client, baking: true }
    - ops
    - { role: icinga, baking: true }
    - repo_S3_releases
    - auth_autobldr
    - { role: ems, do: ami }
    - { role: bake, distro: nada }

- name: make AMI and terminate instance
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    ami_name: EMS-007
    service_tag: EMS
  tasks:
    - name: create image
      ec2_ami:
        instance_id: "{{ ec2.instances.0.id }}"
        region: "{{ region }}"
        name: "{{ ami_name }}"
        description: "{{ ami_name }}"
        wait: yes
        tags:
          Name: "{{ ami_name }}"
          service: "{{ service_tag }}"
        launch_permissions:
          user_ids: ['416386939808']
      register: ec2_ami
    - name: terminate instance
      ec2:
        instance_ids: "{{ ec2.instances.0.id }}"
        region: "{{ region }}"
        state: absent
      when: ec2_ami.state == 'available'
      tags:
        - terminate
