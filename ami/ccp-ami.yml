# ansible-playbook -vvvv ccp-ami.yml --vault-password-file ~/.vault_pass.txt
# Make AMI for service

- name: casino config service
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/tools
  vars:
    name_tag: CCP-AMI
    service_tag: CCP
    sg: SG_LAN_TOOLS
    az: "{{ az1 }}"
    role: ami_base_centos
    instance_type: c3.xlarge
    key_name: ops-config
  tasks:
    - name: launch instance
      ec2:
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        group: "{{ sg }}"
        instance_type: "{{ instance_type }}"
        instance_profile_name: "{{ role }}"
        instance_tags:
          Name: "{{ name_tag }}"
          service: "{{ service_tag }}"
        image: "{{ centos_68_base }}"
        vpc_subnet_id: "{{ subnet_pri_1 }}"
        zone: "{{ az }}"        
        wait: yes
      register: ec2

    - name: Add EP2 instances to host group
      local_action: add_host hostname={{ item.private_ip }} groupname=launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to be available
      wait_for: host={{ item.private_ip }} port=22 delay=60 timeout=300 state=started
      with_items: "{{ ec2.instances }}"

- name: Configure instance(s)
  hosts: launched
  become: yes
  become_user: root
  become_method: sudo
  remote_user: centos
  gather_facts: True
  vars_files:
    - ../host_vars/ccp-dev.yml
    - ../group_vars/vaults/dev
    - ../group_vars/dev
  roles:
    - ddiuser
    - { role: ldap_client, baking: yes }
    - ops
    - splunkforwarder
    - auth_autobldr
    - ccp_ami
    - { role: icinga, baking: true }
  tasks:
    - name: ddi ops repo
      yum_repository:
        name: DDI-S3-Releases
        description: DDI-S3-Releases
        baseurl: http://ddi-releases-repo.s3.amazonaws.com/$basearch
        enabled: yes
        gpgcheck: no
        s3_enabled: yes
        priority: 1

    - yum: name={{ item }} state=installed
      with_items:
        - jdk1.8.0_45
#        - java-1.8.0-openjdk
#        - jakarta-commons-daemon-jsvc

- name: make AMI and terminate instance
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    ami_name: CCP-007
    ami_desc: Casino Config CENTOS_68 AMI
    service_tag: CCP
  tasks:
    - name: create image
      ec2_ami:
        instance_id: "{{ ec2.instances.0.id }}"
        region: us-east-1
        name: "{{ ami_name }}"
        description: "{{ ami_name }}"
        wait: yes
        tags:
          Name: CCP-007
          service: "{{ service_tag }}"
        launch_permissions:
           user_ids: ['416386939808']
      register: ec2_ami
    - name: terminate instance
      ec2:
        instance_ids: "{{ ec2.instances.0.id }}"
        region: us-east-1
        state: absent
      when: ec2_ami.state == 'available'
      tags:
        - terminate
