# export ANSIBLE_FORCE_COLOR=true; export AWS_PROFILE=prod; ansible-playbook -vvvv --vault-password-file ~/.vault_pass.txt ~/ddi-vpc/ami/php-55w-ami.yml | sed -e 's/\\r/'$'/g'
#
- name: APP PHP 55w AMI
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/tools
    #- host_vars/app
  vars:
    service_env: tools
    service_tag: PHP
    svc: PHP
    app_tag: php-casino
    name_tag: "{{ service_tag }}-AMI"
    sg: "SG_LAN_{{ service_env | upper }}"
    role: ami_base_centos # "{{ service_tag | lower }}-{{ service_env }}"
    instance_type: c3.large
    key_name: ops-config

  tasks:
    - name: Launch instance
      ec2:
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        region: "{{ region }}"
        vpc_subnet_id: "{{ subnet_pri_1 }}"
        zone: "{{ az1 }}"
        group: "{{ sg }}"
        image: "{{ centos_7_ebs_hvm }}"
        instance_profile_name: "{{ role }}"
        volumes:
          - device_name: /dev/sda1
            volume_size: 8
            delete_on_termination: true
        instance_tags:
          Name: "{{ name_tag }}"
          service: "{{ service_tag }}"

        wait: yes
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ ec2.instances.0.private_ip }}"
        groupname: launched

#    - name: Add tag to instances
#      local_action:
#        module: ec2_tag
#        name: "{{ ec2.instances.0.id }}"
#        region: "{{ region }}"
#        state: present
#      args:
#        tags:
#          Name: "{{ name_tag }}"
#          env: "{{ service_env }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ ec2.instances.0.private_ip }}"
        port: 22
        delay: 60
        timeout: 300
        state: started

    - name: Pause for cloud-init
      pause:
        seconds: 30

- name: Configure instance(s)
  hosts: launched
  become: yes
  become_user: root
  become_method: sudo
  remote_user: centos
  gather_facts: True
  vars_files:
    - ../group_vars/tools
    #- group_vars/vaults/dev
    - ../host_vars/php

  roles:
    - ddiuser
    - { role: ldap_client, sshd_additional_groups: centos, baking: true }
    - auth_autobldr
    - repo_S3_releases
    #- centos-scl # replace with Remi?
    - { role: ops, repo: git, code_deploy: true }
    - { role: splunkforwarder, vpc: true, baking: true }
    - { role: icinga, baking: true }
    - { role: app, do: ami }
    - { role: bake, distro: nada }

- name: Bake AMI
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - ../host_vars/php
  roles:
    - { role: bake, bake: true }
