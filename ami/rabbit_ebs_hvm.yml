## Runs as ansible-playbook -vvvv rabbit_ebs_hvm.yml

## The AMI needs to be changed along with role/cbami/tasks/default.yml
## to the correct version of couchbase you wish to create a AMI of

---
- name: Creation of a rabbit ami
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/tools
  vars:
    sg: SG_LAN_TOOLS
    name_tag: MQAMI
  tasks:
    - name: Launch instances
      local_action:
        module: ec2
        region: "{{ region }}"
        key_name: ops-config
        group: "{{ sg }}"
        instance_type: m3.xlarge
        instance_profile_name: ami_base_centos
        image: "{{ centos_68_base }}"
        vpc_subnet_id: "{{ subnet_pri_1 }}"
        zone: "{{ az1 }}"
        count: 1
        volumes:
          - device_name: /dev/sda1
            volume_size: 8
            delete_on_termination: true
        wait: yes
      register: ec2

    - name: Add EP2 instances to host group
      local_action: add_host hostname={{ item.private_ip }} groupname=ec2launch
      with_items: "{{ ec2.instances }}"

    - name: Add tag to instances
      local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Name: "{{ name_tag }}"

    - name: Wait for SSH to be available
      wait_for: host={{ item.private_ip }} port=22 delay=60 timeout=300 state=started
      with_items: "{{ ec2.instances }}"

- name: Configure provisioned servers
  hosts: ec2launch
  remote_user: centos
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - ldap_client
    - rabbitami
#  tasks:
#    - name: create /etc/ssh/.ssh for auth keys
#      file: path=/etc/ssh/.ssh
#            state=directory
#            mode=0700
#
#    - name: copy the root auth keys to /etc/ssh/.ssh/
#      shell: '/bin/cp /home/centos/.ssh/authorized_keys /etc/ssh/.ssh/authorized_keys'
#
#    - name: perms
#      file: path=/etc/ssh/.ssh/authorized_keys
#            state=touch
#            mode=0600
#
#    - name: make a backup to test perms
#      shell: '/bin/cp /home/centos/.ssh/authorized_keys /etc/ssh/.ssh/backup_authorized_keys_to_test_perms'
#
#    - name: 
#      lineinfile: dest=/etc/ssh/sshd_config
#                  state=present
#                  line='AuthorizedKeysFile      /etc/ssh/.ssh/authorized_keys'
#
#    - name: restart sshd
#      service: name=sshd
#               state=restarted

#- name: remove the centos user
#  hosts: ec2launch
#  become: yes
#  become_user: root
#  become_method: sudo
#  tasks:
#    - name: pause for centos user tasks to end and release so we can delete it
#      pause: minutes=1
#
#    - name: remove the lingering stench of the centos user
#      user: name=centos
#            state=absent
#            remove=yes
#    - name: remove the group as well, thanks redhat
#      group: name=centos
#             state=absent
#    - name: remove sudo
#      file: path=/etc/sudoers.d/90-cloud-init-users
#            state=absent
#
#    - name: reboot system, ready for AMI creation afterwards
#      shell: reboot

- name: make AMI and terminate instance
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    ami_name: MQ_CENT68_AMI-004
    ami_desc: RabbitMQ Centos 6.8 AMI
  tasks:
    - name: Wait for SSH to be available
      wait_for: host={{ item.private_ip }} port=22 delay=60 timeout=300 state=started
      with_items: "{{ ec2.instances }}"

    - name: create image
      ec2_ami:
        instance_id: "{{ ec2.instances.0.id }}"
        region: us-east-1
        name: "{{ ami_name }}"
        description: "{{ ami_desc }}"
        wait: yes
      register: ec2_ami
    - name: terminate instance
      ec2:
        instance_ids: "{{ ec2.instances.0.id }}"
        region: "{{ region }}"
        state: absent
      when: ec2_ami.state == 'available'
      tags:
        - terminate

