# ansible-playbook -vvvv -i "localhost," --vault-password-file ~/.vaultpass foo.yml
---
- name: elb for sbx jenkins service
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/sbx
    - ../host_vars/jenkins
  vars:
    fqdn: jenkins.sbx.doubledowncasino.com
    name_tag: JENKINS-SBX
    sg: SG_LBJENKINS_SBX
  tasks:
    - include: sec_groups/{{ sg }}_INC.yml
    - debug:
        var: ec2_group
    - name: launch elb
      ec2_elb_lb:
        name: "{{ name_tag }}"
        state: present
        security_group_ids: "{{ ec2_group.group_id }}"
        region: us-east-1
        connection_draining_timeout: 30
        cross_az_load_balancing: true
        subnets:
          - "{{ subnet_pub_1 }}"
          - "{{ subnet_pub_2 }}"
        listeners:
          - protocol: https
            instance_protocol: http
            load_balancer_port: 443
            instance_port: "{{ instance_port }}"
            ssl_certificate_id: arn:aws:acm:us-east-1:416386939808:certificate/9cf51623-6b77-4929-89f3-b0f11d6e179d
        health_check:
          ping_protocol: http
          ping_port: "{{ instance_port }}"
          ping_path: "{{ ping_path }}"
          response_timeout: 5
          interval: 10
          unhealthy_threshold: 2
          healthy_threshold: 2
      register: ec2_elb_lb

    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: sbx.doubledowncasino.com
        record: "{{ fqdn }}"
        type: CNAME
        ttl: 60
        value: "{{ ec2_elb_lb.elb.dns_name }}"
      tags:
        - route53



- name: jenkins
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/sbx
    - ../host_vars/jenkins
  vars:
    name_tag: 'JENKINS-SBX 01'
    fqdn: jenkins01.use1.sbx.ddc.io
    sg: SG_JENKINS_SBX
    lb: JENKINS-SBX
    role: jenkins-nonprod
    env: ops
  tasks:
    - include: sec_groups/{{ sg }}_INC.yml
    - name: launch instance
      ec2:
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image: "{{ centos_7_ebs_hvm }}"
        group: "{{ sg }}"
        vpc_subnet_id: "{{ subnet_pri_1 }}"
        assign_public_ip: false
        zone: "{{ az1 }}"
        region: "{{ region }}"
        instance_profile_name: "{{ role }}"
        instance_tags:
          Name: "{{ name_tag }}"
          env: "{{ env }}"
          app: "{{ env }}-jenkins"
        user_data: |
                   #cloud-config
                   hostname: "{{ fqdn }}"
        wait: yes
      register: ec2
    - name: Add instances to host group
      local_action: add_host hostname={{ ec2.instances.0.private_ip }} groupname=launched
    - name: wait for SSH to come up
      wait_for: host={{ ec2.instances.0.private_ip }} port=22 delay=60 timeout=420 state=started
    - name: allow cloud-init to execute
      pause: seconds=15
    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: sbx.ddc.io
        record: "{{ fqdn }}"
        type: A
        ttl: 300
        value: "{{ ec2.instances.0.private_ip }}"
    - name: register Instance
      ec2_elb:
        ec2_elbs: "{{ lb }}"
        instance_id: "{{ item }}"
        region: "{{ region }}"
        state: present
      with_items:
       - "{{ ec2.instances.0.id }}"
      ignore_errors: true

- name: configure instance
  hosts: launched
  remote_user: centos
  become: yes
  become_user: root
  become_method: sudo
  vars_files:
    - ../group_vars/sbx
    - ../host_vars/jenkins
  roles:
    - { role: ops, code_deploy: false, legacy: false }
    - { role: ldap_client, sshd_additional_groups: centos }
    - { role: jenkins }
