# Runs as export AWS_PROFILE=nonprod_admins; ansible-playbook -vvvv edc-sbx-deploy.yml --vault-password-file ~/.vault_mobile.txt --extra-vars "www_prefix=d-sbx-3 ENVIRONMENT=use1 VPC=sbx DOMAIN=doubledowncasino.com buildslave_name=D-SBX-3"
---
- name: Mobile dev/build slave
  hosts: localhost
  vars_files:
    - ../group_vars/sbx
  tasks:
    - name: Launch instances
      ec2:
        key_name: dev-ops-config
        instance_type: c3.xlarge
        region: "{{ region }}"
        instance_profile_name: mob-sbx
        image: ami-431a8255
        group: SG_LAN_SBX
        vpc_subnet_id: "{{ subnet_pri_1 }}"
        zone: "{{ az1 }}"
        count: 1
        wait: yes
        user_data: |
                   #cloud-config
                   write_files:
                     - path: /etc/sudoers.d/pfernandes
                       owner: root
                       permissions: 0400
                       content: |
                                pfernandes         ALL=(ALL)       NOPASSWD: ALL
      register: ec2

    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: sbx.doubledowncasino.com
        record: "{{ www_prefix }}.use1.sbx.doubledowncasino.com"
        type: CNAME
        ttl: 60
        value: "{{ item.private_dns_name }}"
      with_items: "{{ ec2.instances }}"

    - name: Add instances to host group
      local_action: add_host hostname={{ item.private_ip }} groupname=ec2launched
      with_items: "{{ec2.instances}}"

    - name: Add tag to instances
      local_action: ec2_tag resource={{ item.id }} region=us-east-1 state=present
      args:
        tags:
          Name: "{{ buildslave_name }}"
          env: sbx
      with_items: "{{ ec2.instances }}"

    - name: wait for SSH to come up
      wait_for: host={{ item.private_ip }} port=22 delay=60 timeout=300 state=started
      with_items: "{{ ec2.instances }}"


- name: configure and deploy the webservers and application code
  hosts: ec2launched
  become: yes
  become_user: root
  become_method: sudo
  vars:
    hosts_template: mobile_web_hosts
    buildmaster_host: "{{ groups['tag_Name_MOBILEFOOLS'][0] }}"
##
    http_vhost_conf: mobile.dev.apache.conf
    scm: svn
    svn_branch: default
    repo_name: https://ddimobile.slsapp.com/source/mobile-deploy/branches/default
    # These are needed for the www directory
    virtual_www_root: /home/webapps/casino
    current_www_dir: /home/webapps/casino/repo/mobile/www
    www_repo_link_dest: /home/webapps/casino/repo
    www_repo_dir: /mnt/ephemeral/repo
    www_document_root: /home/webapps/casino/current/content
    webapp_install_path: /mnt/ephemeral/repo/mobile/www
    
    mobile_repo_dir: /mnt/ephemeral/repo
    
    http_ver: 2.2.31
    php_ver: php55w
    php_conf_dir: /etc/php.d

  roles:
    - web
    - memcached
    - { role: buildbot, slave_only: 'edc' }
# bob 20170321
#    - { role: mobileweb, task: configure }	# DO WE NEED THIS ROLE TO RUN ON EDC?


######  DO NOT NEED BELOW ********************

# Installs edc web server + local memcache
#
###### TODO/FIXME:
# Site won't load properly unless SFS configuration 'moduleContentPaths'
# is set to use the target host!!
# SFS returns this info in the casinoData response
# We need to make an application.ini value override
#
# Installs buildslave
# Required command line vars:
#   autobldr_private_key: path to private key file


## THIS LAUNCHED THE INSTANCE, NOT NEEDED NOW
#- name: Launch
#  hosts: ec2launched
#  gather_facts: False
#  become: yes
#  become_user: root
#  become_method: sudo
#  vars_files:
#    - host_vars/edc_web_dev
#
#  roles:
#    - { role: edcweb, task: 'init', when: create_host is defined }

#- name: Configure
#  become: yes
#  hosts: ec2launched
#  vars:
#    buildmaster_host: "{{ groups['tag_Name_MOBILEFOOLS'][0] }}"
#
#  vars_files:
#     - group_vars/edc_web_dev
#
#  roles:
#      # - web
#      # - memcached
#      # - { role: buildbot, slave_only: true, buildslave_name: 'desktop' }
#      - { role: edcweb, task: 'provision' }
#
## Install php-casino as the main web app
#- hosts: ec2launched
#  become: yes
#  become_user: root
#  become_method: sudo
#  vars_files:
#     - group_vars/edc_web_dev
#
#  tasks:
#      #- include: tasks/install_www_app.yml
#      - name: copy rpms
#        copy: src=~/resources/{{ item }}
#            dest=/opt/
#            mode=0644
#        with_items:
#            - "{{casinoapi_rpm}}"
#
#      - name: Install rpms
#        yum: name=/opt/{{ item }} state=present
#        with_items:
#            - "{{casinoapi_rpm}}"
#
#      - name: Change web root permissions
#        file:
#          path: "{{ virtual_www_root }}"
#          state: directory
#          owner: "{{ autobldr_username }}"
#          group: "{{ autobldr_username }}"
#        
#      - name: remove existing ini from config
#        ini_file:
#          dest: "{{ virtual_www_root }}/current/application/configs/application.ini"
#          section: "{{ VPC }}:parent"
#          state: absent
#
#      - name: remove existing ini from config
#        ini_file:
#          dest: "{{ virtual_www_root }}/current/application/configs/application.ini"
#          section: "{{ VPC }}_{{ ENVIRONMENT }}:{{ VPC }}"
#          state: absent
#
#      - name: Add application.ini config file
#        template:
#          src: application_inis/casino_api.ini.j2
#          dest: /tmp/appini
#
#      # FIXME: Will duplicate data every time this is run
#      - name: add ini to master
#        shell: 'cat /tmp/appini >>{{ virtual_www_root }}/current/application/configs/application.ini'
#
#      - name: restart httpd
#        service:
#          name: httpd
#          state: restarted

### HAPROXY NO LONGER A THING - DON'T DO IT!!!
##- name: Update haproxy
##  hosts: tag_Name_MobileDevWebProxy
##  become: yes
##  become_user: root
##  become_method: sudo
##  vars_files:
##     - host_vars/edc_web_dev
##  vars:
##      adding_host:
##        alias: "tag_Name_EDCDevWeb"
##        hostmatch: "{{ www_prefix }}.{{ ENVIRONMENT }}.{{ VPC }}.{{ DOMAIN }}"
##        ip_address: "{{ groups['tag_Name_EDCDevWeb'][0] }}"
##
##  roles:
##      - { role: haproxy_config, frontend_config_template: templates/haproxy/desktop-frontend.cfg.j2, backend_config_template: templates/haproxy/desktop-backend.cfg.j2, config_name: 'desktopweb' }
#
##
## FURTHER TASKS:
##
## buildbot's Dev CI builder factory that pulls from maven uses a config file
## (tools/build/conf/desktopdev_deployconfig.json) which references the wrong maven host.  We need a way to
## templatize the host so that the ssh tunnel can work, or find a clean way to
## update buildbot source to use a different config file.
## python ./tools/buildbot-scripts/deploy_artifacts.py --config ./tools/build/conf/desktopdev_deployconfig.json --deployDev
##
## Run CI builder to deploy the code
##
## Run
## > python <buildslave-path>/tools/dev/client-scripts/update_client.py configs/<env>.json
## to download SVN repos and create symlinks for www
## Possibly edit/install that config json
##
## Create this link to link the deployed branch code to the webroot
## /home/webapps/casino/current/content/desktop -> /mnt/ephemeral/home/autobldr/merc-bb-slave/desktop-deploy/edcskyrockets/www/content/desktop
##
## Make sure permissions are 775 for autobldr/apache

