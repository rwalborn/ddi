---
# Runs as ansible-playbook -vvvv -i 'localhost,' cbrgs-stg.yml --vault-password-file ~/.vault_pass.txt

###############################################################################
#  4 NODE 2 AZ CLUSTER                                                        #
#                                                                             #
#  YOU MUST UNCOMMENT THIS LINE IN ORDER FOR THIS TO RUN                      #
#   - ../host_vars/cbrgs-stg                                                     #
#  IN ORDER FOR THIS TO RUN                                                   #
#  THIS WAS DONE TO PREVENT ACCIDENTALLY RUNNING THIS AGAINST A LIVE CLUSTER  #
#                                                                             #
#  RECOMMENT THE LINE AFTER RUNNING SO IT DOES NOT ACCIDENTALLY GET CHECKED   #
#  BACK INTO SOURCE CONTROL                                                   #
#                        *** YOU HAVE BEEN WARNED ***                         #
#                                                                             #
###############################################################################

- name: Creation of "{{ prefix }}-{{ env }}" Couchbase cluster
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../group_vars/stg
    - ../group_vars/vaults/stg
    - ../host_vars/cbrgs-stg
  vars:
    region: "{{ region }}"
    ami: "{{ cb_4x_ami }}"
  tasks:
    - name: Launch instances
      local_action:
        module: ec2
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        group: "{{ sg }}"
        instance_type: "{{ instance_type }}"
        instance_profile_name: "{{ profile_name }}"
        image: "{{ ami }}"
        vpc_subnet_id: "{{ subnet_pri_1c }}"
        zone: "{{ az1 }}"
        count: 1
        volumes:
          - device_name: /dev/xvdb
            volume_size: 40
            ephemeral: ephemeral0
            delete_on_termination: true
          - device_name: /dev/xvdc
            volume_size: 40
            ephemeral: ephemeral1
            delete_on_termination: true
        instance_tags:
          Name: "{{ prefix }}801-{{ env }}"
          env: "{{ dd_env }}"
          DNS: "{{ this_env }}"
          Service: "CBRGS"
        wait: yes
      register: ec2

    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: ddc.io
        record: "{{ fqdn_prefix }}801.{{ dd_env }}.ddc.io"
        type: A
        ttl: 60
        value: "{{ item.private_ip }}"
      with_items: "{{ec2.instances}}"

    - name: Add EP2 instances to host group
      local_action: add_host hostname={{ item.private_ip }} groupname=couchbase-main
      with_items: "{{ec2.instances}}"

    - name: Launch instances
      local_action:
        module: ec2
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        group: "{{ sg }}"
        instance_type: "{{ instance_type }}"
        instance_profile_name: "{{ profile_name }}"
        image: "{{ ami }}"
        vpc_subnet_id: "{{ subnet_pri_1c }}"
        zone: "{{ az1 }}"
        count: 1
        volumes:
          - device_name: /dev/xvdb
            volume_size: 40
            ephemeral: ephemeral0
            delete_on_termination: true
          - device_name: /dev/xvdc
            volume_size: 40
            ephemeral: ephemeral1
            delete_on_termination: true
        instance_tags:
          Name: "{{ prefix }}802-{{ env }}"
          env: "{{ dd_env }}"
          DNS: "{{ this_env }}"
          Service: "CBRGS"
        wait: yes
      register: ec2

    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: ddc.io
        record: "{{ fqdn_prefix }}802.{{ dd_env }}.ddc.io"
        type: A
        ttl: 60
        value: "{{ item.private_ip }}"
      with_items: "{{ec2.instances}}"

    - name: Add EP2 instances to host group
      local_action: add_host hostname={{ item.private_ip }} groupname=couchbase-nodes
      with_items: "{{ec2.instances}}"

    - name: Launch instances
      local_action:
        module: ec2
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        group: "{{ sg }}"
        instance_type: "{{ instance_type }}"
        instance_profile_name: "{{ profile_name }}"
        image: "{{ ami }}"
        vpc_subnet_id: "{{ subnet_pri_1d }}"
        zone: "{{ az2 }}"
        count: 1
        volumes:
          - device_name: /dev/xvdb
            volume_size: 40
            ephemeral: ephemeral0
            delete_on_termination: true
          - device_name: /dev/xvdc
            volume_size: 40
            ephemeral: ephemeral1
            delete_on_termination: true
        instance_tags:
          Name: "{{ prefix }}803-{{ env }}"
          env: "{{ dd_env }}"
          DNS: "{{ this_env }}"
          Service: "CBRGS"
        wait: yes
      register: ec2

    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: ddc.io
        record: "{{ fqdn_prefix }}803.{{ dd_env }}.ddc.io"
        type: A
        ttl: 60
        value: "{{ item.private_ip }}"
      with_items: "{{ec2.instances}}"

    - name: Add EP2 instances to host group
      local_action: add_host hostname={{ item.private_ip }} groupname=couchbase-nodes
      with_items: "{{ec2.instances}}"

    - name: Launch instances
      local_action:
        module: ec2
        region: "{{ region }}"
        key_name: "{{ key_name }}"
        group: "{{ sg }}"
        instance_type: "{{ instance_type }}"
        instance_profile_name: "{{ profile_name }}"
        image: "{{ ami }}"
        vpc_subnet_id: "{{ subnet_pri_1d }}"
        zone: "{{ az2 }}"
        count: 1
        volumes:
          - device_name: /dev/xvdb
            volume_size: 40
            ephemeral: ephemeral0
            delete_on_termination: true
          - device_name: /dev/xvdc
            volume_size: 40
            ephemeral: ephemeral1
            delete_on_termination: true
        instance_tags:
          Name: "{{ prefix }}804-{{ env }}"
          env: "{{ dd_env }}"
          DNS: "{{ this_env }}"
          Service: "CBRGS"
        wait: yes
      register: ec2

    - name: register dns
      route53:
        command: create
        overwrite: true
        zone: ddc.io
        record: "{{ fqdn_prefix }}804.{{ dd_env }}.ddc.io"
        type: A
        ttl: 60
        value: "{{ item.private_ip }}"
      with_items: "{{ec2.instances}}"

    - name: Add EP2 instances to host group
      local_action: add_host hostname={{ item.private_ip }} groupname=couchbase-nodes
      with_items: "{{ec2.instances}}"


    - name: Wait for SSH to be available
      wait_for: host={{ item.private_ip }} port=22 delay=60 timeout=300 state=started
      with_items: "{{ec2.instances}}"


- name: add raid and install couchbase
  vars_files:
    - ../group_vars/stg
    - ../group_vars/vaults/stg
    - ../host_vars/cbrgs-stg
  hosts: couchbase-main,couchbase-nodes
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - cb_raid0

- name: wait to be sure all couchbases are listening on 8091
  hosts: couchbase-main,couchbase-nodes
  tasks:
    - name: ensure healthy couchbase service
      wait_for:
        port: 8091


- name: Initialize the cluster and add the nodes to the cluster
  vars_files:
    - ../group_vars/stg
    - ../group_vars/vaults/stg
    - ../host_vars/cbrgs-stg
  hosts: couchbase-main
  become: yes
  become_user: root
  become_method: sudo
  tasks:
#    - name: Add user via curl as workaround while hearing crickets from couchbase support
#      shell: "curl -s -u {{ cb_admin_user }}:{{ cb_admin_pw }} -X POST http://localhost:8091/pools/default -d memoryQuota={{ memory_quota }}"
#
    - name: Configure main node
      shell: "/opt/couchbase/bin/couchbase-cli cluster-init -c 127.0.0.1:8091  --cluster-init-username={{ cb_admin_user }} --cluster-init-password={{ cb_admin_pw }} --cluster-init-port=8091 --cluster-init-ramsize={{ cluster_ram_quota }} --cluster-index-ramsize={{ cluster_index_ramsize }}"

    - name: add nodes
      shell: "/opt/couchbase/bin/couchbase-cli server-add -c 127.0.0.1:8091 -u {{ cb_admin_user }} -p {{ cb_admin_pw }} --server-add={{ hostvars[item]['ansible_eth0']['ipv4']['address'] }}:8091 --server-add-username={{ cb_admin_user }} --server-add-password={{ cb_admin_pw }}"
      with_items: "{{ groups['couchbase-nodes'] }}"

    - name: Rebalance the cluster
      shell: /opt/couchbase/bin/couchbase-cli rebalance -c 127.0.0.1:8091 -u "{{ cb_admin_user }}" -p "{{cb_admin_pw }}"
    
    - name: create buckets with replicas
      shell: "/opt/couchbase/bin/couchbase-cli bucket-create -c 127.0.0.1:8091 --bucket={{ bucket1_name }} --bucket-type=couchbase --bucket-port=11211 --bucket-ramsize={{ bucket1_ram_quota }}  --bucket-replica={{ bucket1_num_replicas }} -u {{ cb_admin_user }} -p {{ cb_admin_pw }}"

    - name: add read only user for data dogs
      shell: "/opt/couchbase/bin/couchbase-cli user-manage -c 127.0.0.1:8091  -u {{ cb_admin_user }} -p {{ cb_admin_pw }} --set --ro-username={{ cb_ro_user }} --ro-password={{ cb_ro_pw }}"
  
